 git 某次提交补丁的生成与应用
分类： git使用 2013-01-08 16:51 261人阅读 评论(0) 收藏 举报
使用git format-patch生成所需要的patch:
# git format-patch -s 1bbe3c8c197a35f79bfddaba099270a2e54ea9c7
please replace the hash code with your repo previous commit.
then you can find the patch under repo directory.
then mail your patch to configuration admin. 
# git format-patch -M master         // 当前分支所有超前master的提交
# git format-patch -s 4e16                // 某次提交以后的所有patch, --4e16指的是SHA1 ID
# git format-patch -1                     //  单次提交
# git format-patch -3                    // 从master往前3个提交的内容，可修改为你想要的数值
# git format-patch –n 07fe            // -n指patch数，07fe对应提交的名称, 某次提交（含）之前的几次提交
# git format-patch -s --root origin     // 从origin到指定提交的所有patch
应用patch：
先检查patch文件：# git apply --stat newpatch.patch
检查能否应用成功：# git apply --check  newpatch.patch
打补丁：# git am --signoff < newpatch.patch
(使用-s或--signoff选项，可以commit信息中加入Signed-off-by信息)
或git am 
http://blog.csdn.net/mliubing2532/article/details/7577905
http://blog.csdn.net/yuyin86/article/details/8087057

git format-patch HEAD^生成标准补丁

git am –abort //取消前次提交多余的内容
git am *.patch//将当前目录下所有补丁打上
git am ~/patch-set/*.patch//将此目录下的补丁打上

